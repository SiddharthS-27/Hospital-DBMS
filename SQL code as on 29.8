USE hospitaldbms;

-- Disable FK checks before dropping
SET FOREIGN_KEY_CHECKS = 0;

DROP TABLE IF EXISTS lab_test;
DROP TABLE IF EXISTS emergency_care;
DROP TABLE IF EXISTS medical_history;
DROP TABLE IF EXISTS test_result;
DROP TABLE IF EXISTS Pharmacy_Bill;
DROP TABLE IF EXISTS Pharmacy;
DROP TABLE IF EXISTS hospital_bill;
DROP TABLE IF EXISTS appointment;
DROP TABLE IF EXISTS equipment;
DROP TABLE IF EXISTS supplies;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS staff;
DROP TABLE IF EXISTS patient;
DROP TABLE IF EXISTS Medicine;
DROP TABLE IF EXISTS department;

SET FOREIGN_KEY_CHECKS = 1;

-- Create tables

CREATE TABLE department (
  DEPARTMENT_ID INT NOT NULL,
  LOCATION VARCHAR(20),
  DEPARTMENT_NAME VARCHAR(20),
  DESCRIPTION VARCHAR(50),
  PRIMARY KEY (DEPARTMENT_ID)
);

CREATE TABLE patient (
  PATIENT_ID INT NOT NULL,
  NAME VARCHAR(20),
  AGE INT NOT NULL,
  GENDER VARCHAR(10),
  CONTACT_NUMBER VARCHAR(20),
  ADDRESS VARCHAR(100),
  PRIMARY KEY (PATIENT_ID),
  UNIQUE KEY uq_patient_contact_name (CONTACT_NUMBER, NAME, PATIENT_ID) -- Superkey constraint
);

CREATE TABLE staff (
  STAFF_ID INT NOT NULL,
  NAME VARCHAR(20),
  ROLE VARCHAR(20),
  SCHEDULE VARCHAR(20),
  CONTACT VARCHAR(50),
  PRIMARY KEY (STAFF_ID)
);

CREATE TABLE user (
  USER_ID INT NOT NULL,
  USERNAME VARCHAR(20),
  PASSWORD VARCHAR(20),
  ROLE VARCHAR(20),
  STAFF_ID INT,
  PRIMARY KEY (USER_ID),
  KEY FK_USER_STAFF (STAFF_ID),
  CONSTRAINT FK_USER_STAFF FOREIGN KEY (STAFF_ID) REFERENCES staff(STAFF_ID)
);

CREATE TABLE appointment (
  APPOINTMENT_ID INT NOT NULL,
  APPOINTMENT_DATE DATE NOT NULL,
  APPOINTMENT_TIME TIME,
  DOCTOR_ID INT,
  PATIENT_ID INT NOT NULL,
  STATUS VARCHAR(10),
  PRIMARY KEY (APPOINTMENT_ID),
  KEY FK_APPOINTMENT_DOCTOR (DOCTOR_ID),
  KEY FK_APPOINTMENT_PATIENT (PATIENT_ID),
  CONSTRAINT FK_APPOINTMENT_DOCTOR FOREIGN KEY (DOCTOR_ID) REFERENCES staff(STAFF_ID),
  CONSTRAINT FK_APPOINTMENT_PATIENT FOREIGN KEY (PATIENT_ID) REFERENCES patient(PATIENT_ID)
);

CREATE TABLE hospital_bill (
  BILL_ID INT NOT NULL,
  PATIENT_ID INT NOT NULL,
  AMOUNT INT,
  PAYMENT_STATUS VARCHAR(10),
  BILL_DATE DATE,
  PRIMARY KEY (BILL_ID),
  KEY FK_HOSPITAL_BILL_PATIENT (PATIENT_ID),
  CONSTRAINT FK_HOSPITAL_BILL_PATIENT FOREIGN KEY (PATIENT_ID) REFERENCES patient(PATIENT_ID)
);

CREATE TABLE test_result (
  TEST_ID INT NOT NULL,
  PATIENT_ID INT,
  TEST_DATE DATE,
  RESULT VARCHAR(100),
  PRIMARY KEY (TEST_ID),
  KEY FK_TEST_RESULT_PATIENT (PATIENT_ID),
  CONSTRAINT FK_TEST_RESULT_PATIENT FOREIGN KEY (PATIENT_ID) REFERENCES patient(PATIENT_ID)
);

CREATE TABLE lab_test (
  BILL_ID INT,
  TEST_ID INT,
  NAME VARCHAR(20),
  COST INT,
  KEY FK_LAB_TEST_BILL (BILL_ID),
  KEY FK_LAB_TEST_TEST_RESULT (TEST_ID),
  CONSTRAINT FK_LAB_TEST_BILL FOREIGN KEY (BILL_ID) REFERENCES hospital_bill(BILL_ID),
  CONSTRAINT FK_LAB_TEST_TEST_RESULT FOREIGN KEY (TEST_ID) REFERENCES test_result(TEST_ID)
);

CREATE TABLE medical_history (
  PATIENT_ID INT,
  ALLERGY_INFORMATION VARCHAR(50),
  HPI VARCHAR(100),
  PAST_MEDICAL_HISTORY VARCHAR(50),
  MEDICATION_HISTORY VARCHAR(100),
  KEY FK_MEDICAL_HISTORY_PATIENT (PATIENT_ID),
  CONSTRAINT FK_MEDICAL_HISTORY_PATIENT FOREIGN KEY (PATIENT_ID) REFERENCES patient(PATIENT_ID)
);

CREATE TABLE emergency_care (
  EMERGENCY_ID INT NOT NULL,
  EMERGENCY_TYPE VARCHAR(50),
  CONDITION_ON_ARRIVAL VARCHAR(100),
  ARRIVAL_TIME TIME,
  PATIENT_ID INT,
  TREATMENT_GIVEN VARCHAR(50),
  ASSIGNED_STAFF_ID INT NOT NULL,
  OUTCOME VARCHAR(50),
  RESOURCES_USED VARCHAR(50),
  NOTES VARCHAR(50),
  PRIMARY KEY (EMERGENCY_ID),
  KEY FK_EMERGENCY_CARE_PATIENT (PATIENT_ID),
  KEY FK_EMERGENCY_CARE_STAFF (ASSIGNED_STAFF_ID),
  CONSTRAINT FK_EMERGENCY_CARE_PATIENT FOREIGN KEY (PATIENT_ID) REFERENCES patient(PATIENT_ID),
  CONSTRAINT FK_EMERGENCY_CARE_STAFF FOREIGN KEY (ASSIGNED_STAFF_ID) REFERENCES staff(STAFF_ID)
);

CREATE TABLE equipment (
  EQUIPMENT_ID INT NOT NULL,
  NAME VARCHAR(20),
  TYPE VARCHAR(20),
  PURCHASE_DATE DATE,
  LAST_MAINTENANCE VARCHAR(50),
  NEXT_MAINTENANCE VARCHAR(50),
  AGE INT,
  STATUS VARCHAR(20),
  NOTES VARCHAR(50),
  STAFF_ID INT,
  DEPARTMENT_ID INT,
  PRIMARY KEY (EQUIPMENT_ID),
  KEY FK_EQUIPMENT_STAFF (STAFF_ID),
  KEY FK_EQUIPMENT_DEPARTMENT (DEPARTMENT_ID),
  CONSTRAINT FK_EQUIPMENT_STAFF FOREIGN KEY (STAFF_ID) REFERENCES staff(STAFF_ID),
  CONSTRAINT FK_EQUIPMENT_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES department(DEPARTMENT_ID)
);

CREATE TABLE supplies (
  SUPPLY_ID INT NOT NULL,
  NAME VARCHAR(20),
  CATEGORY VARCHAR(20),
  PURCHASE_DATE DATE,
  LAST_UPDATED DATE,
  EXPIRY_DATE DATE,
  STATUS VARCHAR(20),
  NOTES VARCHAR(100),
  SUPPLIER_INFO VARCHAR(50),
  DEPARTMENT_ID INT,
  PRIMARY KEY (SUPPLY_ID),
  KEY FK_SUPPLIES_DEPARTMENT (DEPARTMENT_ID),
  CONSTRAINT FK_SUPPLIES_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES department(DEPARTMENT_ID)
);

CREATE TABLE Medicine (
  MEDICINE_ID INT NOT NULL,
  NAME VARCHAR(100) NOT NULL,
  PRICE_PER_UNIT DECIMAL(10, 2),
  QUANTITY INT NOT NULL,
  MANUFACTURING_DATE DATE,
  EXPIRY_DATE DATE,
  PRIMARY KEY (MEDICINE_ID)
);

CREATE TABLE Pharmacy (
  MEDICINE_ID INT NOT NULL,
  DRUG_NAME VARCHAR(30) NOT NULL,
  STOCK_QUANTITY INT NOT NULL,
  DRUG_CATEGORY VARCHAR(50) NOT NULL,
  PRIMARY KEY (MEDICINE_ID),
  KEY FK_PHARMACY_MEDICINE (MEDICINE_ID),
  CONSTRAINT FK_PHARMACY_MEDICINE FOREIGN KEY (MEDICINE_ID) REFERENCES Medicine(MEDICINE_ID)
);

CREATE TABLE Pharmacy_Bill (
  ISSUE_ID INT NOT NULL,
  ISSUE_DATE DATE NOT NULL,
  QUANTITY_ISSUED INT NOT NULL,
  MEDICINE_ID INT,
  PATIENT_ID INT,
  PRIMARY KEY (ISSUE_ID),
  KEY FK_PHARMACY_BILL_MEDICINE (MEDICINE_ID),
  KEY FK_PHARMACY_BILL_PATIENT (PATIENT_ID),
  CONSTRAINT FK_PHARMACY_BILL_MEDICINE FOREIGN KEY (MEDICINE_ID) REFERENCES Pharmacy(MEDICINE_ID),
  CONSTRAINT FK_PHARMACY_BILL_PATIENT FOREIGN KEY (PATIENT_ID) REFERENCES patient(PATIENT_ID)
);

-- Show tables to confirm
SHOW TABLES;
